MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
```
## 各隊三分球出手最準的球員
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output, digits=2)
NBA1415bestThreeponit<-merge2(NBA1415bestThreeponit,bestThreeponit)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge2(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output, digits=2)
output2
## 各隊三分球出手最準的球員
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
title: "NBA 2014-2015球季 各隊分析"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```{r cars}
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```{r pressure, echo=FALSE}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```{r cars}
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```{r pressure, echo=FALSE}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knit_with_parameters('~/GitHub/bigdatacguim/hw3.Rmd', encoding = 'UTF-8')
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
install.packages("SportsAnalytics")
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```{r pressure, echo=FALSE}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
```
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```
```
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
```
title:"NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
title:"NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
install.packages("SportsAnalytics")
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
knitr::opts_chunk$set(echo = TRUE)
```{r setup, include=FALSE}
---
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```{r setup, include=FALSE}
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r cars}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## Including Plots
各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```{r setup, include=FALSE}
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r cars}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## Including Plots
各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
output: github_document
