NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
```
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```
```
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
```
title:"NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
title:"NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
install.packages("SportsAnalytics")
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
##各隊得分王
計算依據為全季總得分最多的球員
```
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)最高的球員
```
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
knitr::opts_chunk$set(echo = TRUE)
```{r setup, include=FALSE}
---
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```{r setup, include=FALSE}
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r cars}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## Including Plots
各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊最辛苦的球員
計算依據為全季上場時間最多的球員
```{r setup, include=FALSE}
MaxMinutes<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutes<-merge(NBA1415,MaxMinutes)
output<-NBA1415MaxMinutes[order(NBA1415MaxMinutes$TotalMinutes,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r cars}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## Including Plots
各隊最有效率的球員
計算依據為全季最有效率的球員
最有效率的球員:(總得分/觸戰分鐘數)
```{r pressure, echo=FALSE}
NBA1415$efficiency<-NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
## 各隊三分球出手最準的球員
計算依據為全季三分球出手最準的球員
三分球出手最準的球員:(三分球命中率/三分球出手次數)
```{r pressure, echo=FALSE}
NBA1415$Threepointshot<-NBA1415$ThreesMade/NBA1415$ThreesAttempted
bestThreeponit<-aggregate(Threepointshot~Team,NBA1415,max)
NBA1415bestThreeponit<-merge(NBA1415bestThreeponit,bestThreeponit)
output2<-NBA1415bestThreeponit[order(NBA1415bestThreeponit$Threepointshot,decreasing = T),c("Team","Name","Threepointshot")]
library(knitr)
kable(output2, digits=2)
knitr::opts_chunk$set(echo = TRUE)
```
output: github_document
title: "蔡英文的Facebook粉絲團分析"
output: github_document
---
#2016/01/01至04/11貼文分析
#讀取蔡英文粉絲團資料
```{r }
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAACEdEose0cBAIIMb9kg9NeLhpP1z4NehHZCwRPnta9kOmXIdWYoft4eY0XxJcVFoExCHXBj65909dg5A5yaRM1lkZChDkRAMRpYrKKUeosR50bOF5VlBVWeWVIldZCgJdrW4KUJIMCbbKIp8wPEeHkzBcG0QbsoO1b1BWxqEtMjHl8ULnnSUt9R2fYPPalhcb2ccc4wgZDZD'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
```
#每日發文數分析
```{r echo=TRUE}
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
```
2016/01/01~2016/04/11 除了01/17這天以外，每天都有發文，可能與剛當選有關。
01/14、01/15這兩天的發文數特別高，應該是接近選舉拉票的緣故。
當選後與當選前的發文數量也差很多，選舉前，一天平均5篇左右的發文而當選後一天至多2篇。
#每日likes數
```{r echo=TRUE}
output<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
```
01/14、01/15 發文數特別高，連帶讚數也升高。
01/16、01/17(圖片) 兩天讚數暴增到20多萬，應該是慶祝當選。
01/20 讚數突然升高至12萬，因為她PO出她的兩隻愛貓。
01/22 PO出與副總統當選人的當選證書合影。
02/08 台南大地震祈福感謝文。讚數10萬。
02/11 台南大地震祈福文。讚數11萬。
03/12 分享反核大遊行，但是反應不熱烈，讚數只有7000多。
03/29 為小燈泡祈福文，讚數18萬。
#每日comments數
```{r echo=TRUE}
output<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
```
01/17 留言1萬多則，大多祝賀當選，但也不少人在吵架。
01/20 留言近3萬則，很多是簡體字，應該是那時中國大陸的防火牆失靈所造成。
03/19 出席車子的活動，與嚴凱泰互動很少，留言數也是01/01~04/10最低的。
#每日shares數
```{r echo=TRUE}
output<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
```
01/16 分享數4000多，應該是祝賀當選。
01/17、01/18 分享數也不少，大概是選後激情未散。
01/20~01/22 謝票文。
02/07 台南大地震，祈福感謝加油文。
03/29 為小燈泡祈福。分享數6000多，比當選時還多。
---
title: "蔡英文的Facebook粉絲團分析"
output: github_document
---
#2016/01/01至04/11貼文分析
#讀取蔡英文粉絲團資料
```{r }
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAACEdEose0cBAIIMb9kg9NeLhpP1z4NehHZCwRPnta9kOmXIdWYoft4eY0XxJcVFoExCHXBj65909dg5A5yaRM1lkZChDkRAMRpYrKKUeosR50bOF5VlBVWeWVIldZCgJdrW4KUJIMCbbKIp8wPEeHkzBcG0QbsoO1b1BWxqEtMjHl8ULnnSUt9R2fYPPalhcb2ccc4wgZDZD'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
```
#每日發文數分析
```{r echo=TRUE}
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
```
2016/01/01~2016/04/11
除了01/17這天以外，每天都有發文，或許是希望被關注。
01/14、01/15這兩天的發文數特別高，可能是接近選舉。
當選後與當選前的發文數量也差很多，選舉前，一天平均5篇左右的發文而當選後一天至多2篇，但依然維持每天發文。
#每日likes數
```{r echo=TRUE}
output1<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output1, digits=2)
```
01/14、01/15 發文數特別高，連帶讚數也升高。
01/16、01/17(圖片) 兩天讚數暴增到20多萬，應該是慶祝當選。
01/20 讚數突然升高至12萬，因為她PO出她的兩隻愛貓。
01/22 PO出與副總統當選人的當選證書合影。
02/08 台南大地震祈福感謝文。讚數10萬。
02/11 台南大地震祈福文。讚數11萬。
03/12 分享反核大遊行，但是反應不熱烈，讚數只有7000多。
03/29 為小燈泡祈福文，讚數18萬。
#每日comments數
```{r echo=TRUE}
output2<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output2, digits=2)
```
01/17 留言1萬多則，大多祝賀當選，但也不少人在吵架。
01/20 留言近3萬則，很多是簡體字，應該是那時中國大陸的防火牆失靈所造成。
03/19 出席車子的活動，與嚴凱泰互動很少，留言數也是01/01~04/10最低的。
#每日shares數
```{r echo=TRUE}
output3<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output3, digits=2)
```
01/16 分享數4000多，應該是祝賀當選。
01/17、01/18 分享數也不少，大概是選後激情未散。
01/20~01/22 謝票文。
02/07 台南大地震，祈福感謝加油文。
03/29 為小燈泡祈福。分享數6000多，比當選時還多。
---
title: "蔡英文的Facebook粉絲團分析"
output: github_document
---
#2016/01/01至04/11貼文分析
#讀取蔡英文粉絲團資料
```{r }
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAACEdEose0cBAIIMb9kg9NeLhpP1z4NehHZCwRPnta9kOmXIdWYoft4eY0XxJcVFoExCHXBj65909dg5A5yaRM1lkZChDkRAMRpYrKKUeosR50bOF5VlBVWeWVIldZCgJdrW4KUJIMCbbKIp8wPEeHkzBcG0QbsoO1b1BWxqEtMjHl8ULnnSUt9R2fYPPalhcb2ccc4wgZDZD'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
```
#每日發文數分析
```{r echo=TRUE}
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
```
2016/01/01~2016/04/11
除了01/17這天以外，每天都有發文，或許是希望被關注。
01/14、01/15這兩天的發文數特別高，可能是接近選舉。
當選後與當選前的發文數量也差很多，選舉前，一天平均5篇左右的發文而當選後一天至多2篇，但依然維持每天發文。
#每日likes數
```{r echo=TRUE}
output1<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output1, digits=2)
```
01/14、01/15 發文數特別高，連帶讚數也升高。
01/16、01/17(圖片) 兩天讚數暴增到20多萬，應該是慶祝當選。
01/20 讚數突然升高至12萬，因為她PO出她的兩隻愛貓。
01/22 PO出與副總統當選人的當選證書合影。
02/08 台南大地震祈福感謝文。讚數10萬。
02/11 台南大地震祈福文。讚數11萬。
03/12 分享反核大遊行，但是反應不熱烈，讚數只有7000多。
03/29 為小燈泡祈福文，讚數18萬。
#每日comments數
```{r echo=TRUE}
output2<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output2, digits=2)
```
01/17 留言1萬多則，大多祝賀當選，但也不少人在吵架。
01/20 留言近3萬則，很多是簡體字，應該是那時中國大陸的防火牆失靈所造成。
03/19 出席車子的活動，與嚴凱泰互動很少，留言數也是01/01~04/10最低的。
#每日shares數
```{r echo=TRUE}
output3<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output3, digits=2)
```
01/16 分享數4000多，應該是祝賀當選。
01/17、01/18 分享數也不少，大概是選後激情未散。
01/20~01/22 謝票文。
02/07 台南大地震，祈福感謝加油文。
03/29 為小燈泡祈福。分享數6000多，比當選時還多。
``{r warning=F,message=F,fig.height=4.5}
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
